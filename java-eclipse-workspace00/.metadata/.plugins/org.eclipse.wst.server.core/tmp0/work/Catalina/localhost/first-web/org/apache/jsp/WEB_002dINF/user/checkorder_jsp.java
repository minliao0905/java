/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.108
 * Generated at: 2021-06-17 00:55:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.educoder.entity.*;

public final class checkorder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");

String path = request.getContextPath();
String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort() + path + "/";
List<Order>  orderlist=(List<Order>)request.getAttribute("orderList");

System.out.println("myorder--"+orderlist);


      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("css/shoppingCart.css\" type=\"text/css\">\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("js/jquery-1.11.3.js\"></script>\r\n");
      out.write("<title>myOrder</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"buycars-container\">\r\n");
      out.write("\t\t<div class=\"w\">\r\n");
      out.write("\t\t\t<div class=\"all\">\r\n");
      out.write("\t\t\t\t<em>全部订单</em>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- 头部全选模块header -->\r\n");
      out.write("\t\t<div class=\"all-thead\">\r\n");
      out.write("\t\t\t<div class=\"t-checkbox\">\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" name=\"\" id=\"\" class=\"checkall\">\r\n");
      out.write("\t\t\t\t全选\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"t-goods\">商品</div>\r\n");
      out.write("\t\t\t<div class=\"t-price\">单价</div>\r\n");
      out.write("\t\t\t<div class=\"t-num\">数量</div>\r\n");
      out.write("\t\t\t<div class=\"t-sum\">收货地址</div>\r\n");
      out.write("\t\t\t<div class=\"t-action\">下单时间</div>\r\n");
      out.write("\t\t\t<div class=\"t-check\">收货状态</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- 商品详情 -->\r\n");
      out.write("\t\t<div class=\"all-item-list\">\r\n");
      out.write("\t\t    ");
 
		    if(orderlist!=null){
		    	for(int i=0;i<orderlist.size();i++){
			    	String str = "<div class='cart-item' id='"+orderlist.get(i).getOrderId()+"'><div class='p-checkbox'> <input type='checkbox'  class='j-checkbox'></div> "+
			          "<div class='p-goods'> <div class='p-img'> </div> <div class='p-msg'>"+orderlist.get(i).getGoodsName()+"</div></div> "
			    	+ "<div class='p-price'>￥"+orderlist.get(i).getGoodsPrice()+"</div> <div class='p-num'> <div class='quantity-form'>"
			    	+"<a class='decrement'>-</a><input type='text' class='itxt' value='1'><a  class='increment'>+</a></div></div>"
			    +"<div class='p-sum'>"+orderlist.get(i).getAddressId()+"</div><div class='p-action'><p>"+orderlist.get(i).getOrderTime()+"</p></div><div class='p-check'>"+orderlist.get(i).getGoodsCheck()+"</div>"
			    	+"<button class='checkbtn'>确认收货</button> </div>" ;
			    	
			    	out.print(str);			    	
			    }
		    }	    
		    
      out.write("\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t    <form action=\"checkder.jsp\" method=\"post\" class=\"check-form\"  onsubmit=\"return checkfunc()\">请再次确认您已收货的订单<button type=\"submit\" class=\"ch-formbtn\">确认</button></form>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("<script>\r\n");
      out.write("var num = 0;\r\n");
      out.write("$(\".checkbtn\").click(function(){\r\n");
      out.write("\t$(this).siblings(\".p-check\").html(\"已收货\");\r\n");
      out.write("\t\r\n");
      out.write("\t var id = $(this).parent().attr(\"id\");\t \r\n");
      out.write("\t  $(\".check-form\").prepend(\"<input  name='ch-id\"+num+\"' value='\"+id+\"'> \");\r\n");
      out.write("\t  $(this).remove();\r\n");
      out.write("\tnum++;\r\n");
      out.write("}); \r\n");
      out.write("\r\n");
      out.write("function checkfunc(){\r\n");
      out.write("\t$(\".check-form\").prepend(\"<input name='ch-num' value='\"+num+\"'>\");\r\n");
      out.write("\t$(\".ch-formbtn\").remove();\r\n");
      out.write("\treturn true;\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
